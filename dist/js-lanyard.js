!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("node-fetch"),require("isomorphic-ws/node.js")):"function"==typeof define&&define.amd?define([,],t):"object"==typeof exports?exports.lanyard=t(require("node-fetch"),require("isomorphic-ws/node.js")):e.lanyard=t(e[void 0],e[void 0])}(this,(function(e,t){return(()=>{var s={792:(e,t,s)=>{var i=null;"undefined"!=typeof WebSocket?i=WebSocket:"undefined"!=typeof MozWebSocket?i=MozWebSocket:void 0!==s.g?i=s.g.WebSocket||s.g.MozWebSocket:"undefined"!=typeof window?i=window.WebSocket||window.MozWebSocket:"undefined"!=typeof self&&(i=self.WebSocket||self.MozWebSocket),e.exports=i},30:(e,t,s)=>{"use strict";e.exports=s(679)},300:(e,t)=>{"use strict";var s=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==s)return s;throw new Error("unable to locate global object")}();e.exports=t=s.fetch,s.fetch&&(t.default=s.fetch.bind(s)),t.Headers=s.Headers,t.Request=s.Request,t.Response=s.Response},479:function(e,t,s){"use strict";var i,r,o,n,a,d,c=this&&this.__classPrivateFieldGet||function(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)},f=this&&this.__classPrivateFieldSet||function(e,t,s,i,r){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?r.call(e,s):r?r.value=s:t.set(e,s),s};Object.defineProperty(t,"__esModule",{value:!0});const h=s(193)||s(300),p=s(30)||s(792),u=s(306);t.default=class{constructor(e,t=!1){if(i.set(this,u.version),r.set(this,"xaronnn"),o.set(this,void 0),n.set(this,"wss://api.lanyard.rest/socket"),a.set(this,"https://api.lanyard.rest/v1/users/"),d.set(this,{INFO:0,HELLO:1,INIT:2,HEARTBEAT:3}),void 0===e)throw new Error("No ID supplied");this.id=e,f(this,n,t?c(this,n,"f")+"?compression=zlib_json":c(this,n,"f"),"f"),f(this,o,new p(c(this,n,"f")),"f"),console.log("[Lanyard] Construct success. (JS-Lanyard/"+c(this,i,"f")+" by "+c(this,r,"f")+")")}on(e,t){c(this,o,"f").onmessage=s=>{const i=s.data,r=JSON.parse(i);switch(e){case"INIT_STATE":switch(r.op){case c(this,d,"f").HELLO:c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").INIT,d:{subscribe_to_id:this.id}})),setInterval((()=>{c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").HEARTBEAT}))}),r.d.heartbeat_interval);break;case c(this,d,"f").INFO:t({id:r.d.discord_user.id,username:r.d.discord_user.username+"#"+r.d.discord_user.discriminator,avatar:r.d.discord_user.avatar,status:r.d.discord_status,activities:r.d.activities.length<=0?null:r.d.activities,listening:r.d.spotify})}break;case"PRESENCE_UPDATE":switch(r.op){case c(this,d,"f").HELLO:c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").INIT,d:{subscribe_to_id:this.id}})),setInterval((()=>{c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").HEARTBEAT}))}),r.d.heartbeat_interval);break;case c(this,d,"f").INFO:t({status:r.d.discord_status})}break;case"ALL":switch(r.op){case c(this,d,"f").HELLO:c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").INIT,d:{subscribe_to_id:this.id}})),setInterval((()=>{c(this,o,"f").send(JSON.stringify({op:c(this,d,"f").HEARTBEAT}))}),r.d.heartbeat_interval);break;case c(this,d,"f").INFO:t(r.d)}break;default:throw new Error("Invalid event type. (Available events: [INIT_STATE, PRESENCE_UPDATE, ALL])")}}}async fetch(e){const t=e?c(this,a,"f")+e:c(this,a,"f")+this.id;let s,i={};return await h(t).then((e=>e.json())).then((e=>{i=e})).catch((e=>{s=e})),i.success?i.data:s}},i=new WeakMap,r=new WeakMap,o=new WeakMap,n=new WeakMap,a=new WeakMap,d=new WeakMap},306:e=>{"use strict";e.exports=JSON.parse('{"name":"js-lanyard","version":"2.0.0","description":"Use Lanyard in your Web App. [Phineas](https://github.com/Phineas) - Creator of [Lanyard API](https://github.com/Phineas/lanyard)","main":"dist/js-lanyard.js","types":"dist/js-lanyard.d.ts","dependencies":{"isomorphic-ws":"4.0.1","node-fetch":"2.6.1","ws":"7.5.3"},"devDependencies":{"@tsconfig/node12":"1.0.9","@types/node-fetch":"2.5.12","ts-loader":"9.2.4","typescript":"4.3.5","typescript-declaration-webpack-plugin":"0.2.2","webpack":"5.46.0","webpack-cli":"4.7.2","webpack-dev-server":"3.11.2"},"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1","build":"webpack --mode=production","build:dev":"webpack --mode=development","serve":"webpack serve --mode=production"},"repository":{"type":"git","url":"git+https://github.com/xaronnn/js-lanyard.git"},"author":"xaronnn","license":"MIT","bugs":{"url":"https://github.com/xaronnn/js-lanyard/issues"},"homepage":"https://github.com/xaronnn/js-lanyard#readme"}')},679:e=>{"use strict";e.exports=t},193:t=>{"use strict";t.exports=e}},i={};function r(e){var t=i[e];if(void 0!==t)return t.exports;var o=i[e]={exports:{}};return s[e].call(o.exports,o,o.exports,r),o.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();var o=r(479);return o.default})()}));